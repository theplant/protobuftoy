// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	SearchRequest
	SearchResponse
	Result
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SearchRequest struct {
	Query         string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	PageNumber    int32  `protobuf:"varint,2,opt,name=page_number,json=pageNumber" json:"page_number,omitempty"`
	ResultPerPage int32  `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage" json:"result_per_page,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *SearchRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

type SearchResponse struct {
	Result []*Result `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchResponse) GetResult() []*Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type Result struct {
	Url      string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Snippets string `protobuf:"bytes,3,opt,name=snippets" json:"snippets,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Result) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Result) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Result) GetSnippets() string {
	if m != nil {
		return m.Snippets
	}
	return ""
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "main.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "main.SearchResponse")
	proto.RegisterType((*Result)(nil), "main.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SearchService service

type SearchServiceClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	SearchAlt(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type searchServiceClient struct {
	cc *grpc.ClientConn
}

func NewSearchServiceClient(cc *grpc.ClientConn) SearchServiceClient {
	return &searchServiceClient{cc}
}

func (c *searchServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/main.SearchService/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchServiceClient) SearchAlt(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/main.SearchService/SearchAlt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SearchService service

type SearchServiceServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	SearchAlt(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterSearchServiceServer(s *grpc.Server, srv SearchServiceServer) {
	s.RegisterService(&_SearchService_serviceDesc, srv)
}

func _SearchService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.SearchService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SearchService_SearchAlt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServiceServer).SearchAlt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.SearchService/SearchAlt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServiceServer).SearchAlt(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SearchService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.SearchService",
	HandlerType: (*SearchServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _SearchService_Search_Handler,
		},
		{
			MethodName: "SearchAlt",
			Handler:    _SearchService_SearchAlt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x89, 0xb1, 0xc1, 0x4c, 0xad, 0xca, 0xd8, 0x43, 0xe8, 0xc5, 0x10, 0x44, 0x72, 0xca,
	0xa1, 0x85, 0xde, 0xbd, 0x8b, 0x94, 0xed, 0x03, 0x84, 0xb4, 0x0c, 0x35, 0x90, 0x26, 0xdb, 0xd9,
	0x59, 0x41, 0xf0, 0xe1, 0x65, 0x77, 0x53, 0xa1, 0xc7, 0xde, 0xf6, 0xff, 0x66, 0x96, 0xf9, 0x76,
	0x07, 0x40, 0xc8, 0x48, 0xa5, 0x79, 0x90, 0x01, 0x6f, 0x8f, 0x4d, 0xdb, 0x17, 0x3d, 0xcc, 0xb6,
	0xd4, 0xf0, 0xfe, 0x4b, 0xd1, 0xc9, 0x92, 0x11, 0x9c, 0xc3, 0xe4, 0x64, 0x89, 0x7f, 0xb2, 0x28,
	0x8f, 0xca, 0x54, 0x85, 0x80, 0x2f, 0x30, 0xd5, 0xcd, 0x81, 0xea, 0xde, 0x1e, 0x77, 0xc4, 0xd9,
	0x4d, 0x1e, 0x95, 0x13, 0x05, 0x0e, 0x7d, 0x7a, 0x82, 0x6f, 0xf0, 0xc8, 0x64, 0x6c, 0x27, 0xb5,
	0x26, 0xae, 0x5d, 0x21, 0x8b, 0x7d, 0xd3, 0x2c, 0xe0, 0x0d, 0xf1, 0xa6, 0x39, 0x50, 0xb1, 0x86,
	0x87, 0xf3, 0x3c, 0xa3, 0x87, 0xde, 0x10, 0xbe, 0x42, 0x12, 0x5a, 0xb2, 0x28, 0x8f, 0xcb, 0xe9,
	0xf2, 0xbe, 0x72, 0x62, 0x95, 0xf2, 0x4c, 0x8d, 0xb5, 0xe2, 0x03, 0x92, 0x40, 0xf0, 0x09, 0x62,
	0xcb, 0xdd, 0xa8, 0xe7, 0x8e, 0x4e, 0x59, 0x5a, 0xe9, 0xc8, 0x6b, 0xa5, 0x2a, 0x04, 0x5c, 0xc0,
	0x9d, 0xe9, 0x5b, 0xad, 0x49, 0x8c, 0x57, 0x49, 0xd5, 0x7f, 0x5e, 0xfe, 0x9e, 0x5f, 0xbd, 0x25,
	0xfe, 0x6e, 0xf7, 0x84, 0x2b, 0x48, 0x02, 0xc0, 0xe7, 0x30, 0xfe, 0xe2, 0x53, 0x16, 0xf3, 0x4b,
	0x38, 0x9a, 0xaf, 0x21, 0x0d, 0xe4, 0xbd, 0x93, 0x2b, 0xee, 0xed, 0x12, 0xbf, 0x80, 0xd5, 0x5f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x32, 0x24, 0x96, 0x1e, 0x8e, 0x01, 0x00, 0x00,
}
